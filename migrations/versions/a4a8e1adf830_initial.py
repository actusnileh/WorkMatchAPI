"""Initial

Revision ID: a4a8e1adf830
Revises:
Create Date: 2025-03-09 14:35:12.455297

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a4a8e1adf830"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "employment_types",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(length=50), nullable=False),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(length=50), nullable=False),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("email", sa.Unicode(length=255), nullable=False),
        sa.Column("password", sa.Unicode(length=255), nullable=False),
        sa.Column("username", sa.Unicode(length=255), nullable=False),
        sa.Column("full_name", sa.Unicode(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("role_id", sa.BigInteger(), nullable=True),
        sa.Column("employment_type_id", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employment_type_id"],
            ["employment_types.o_id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "specialists",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.BigInteger(), nullable=False),
        sa.Column("full_name", sa.Unicode(length=255), nullable=False),
        sa.Column("position", sa.Unicode(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("created_by"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "user_actions",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("action", sa.Unicode(length=255), nullable=False),
        sa.Column("target_id", sa.BigInteger(), nullable=True),
        sa.Column("target_type", sa.Unicode(length=50), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
    )
    op.create_table(
        "vacancies",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("title", sa.Unicode(length=255), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=False),
        sa.Column("requirements", sa.TEXT(), nullable=False),
        sa.Column("conditions", sa.TEXT(), nullable=False),
        sa.Column("salary", sa.BigInteger(), nullable=False),
        sa.Column("employment_type_id", sa.BigInteger(), nullable=True),
        sa.Column("created_by", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.o_id"],
        ),
        sa.ForeignKeyConstraint(
            ["employment_type_id"],
            ["employment_types.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "analysis_results",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("vacancy_id", sa.BigInteger(), nullable=False),
        sa.Column("specialist_id", sa.BigInteger(), nullable=False),
        sa.Column("match_percentage", sa.Numeric(precision=5, scale=2), nullable=False),
        sa.Column("mismatches", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["specialist_id"],
            ["specialists.o_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vacancy_id"],
            ["vacancies.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
    )
    op.create_table(
        "specialist_experience",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("specialist_id", sa.BigInteger(), nullable=False),
        sa.Column("company_name", sa.Unicode(length=255), nullable=True),
        sa.Column("position", sa.Unicode(length=255), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["specialist_id"],
            ["specialists.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
    )
    op.create_table(
        "specialist_skills",
        sa.Column("specialist_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["specialist_id"],
            ["specialists.o_id"],
        ),
        sa.PrimaryKeyConstraint("specialist_id"),
    )
    # ### end Alembic commands ###
    op.bulk_insert(
        sa.table(
            "roles",
            sa.column("name", sa.String),
        ),
        [
            {"name": "hr"},
            {"name": "admin"},
            {"name": "user"},
        ],
    )
    op.bulk_insert(
        sa.table(
            "employment_types",
            sa.column("name", sa.String),
        ),
        [
            {"name": "full-time"},
            {"name": "part-time"},
        ],
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("specialist_skills")
    op.drop_table("specialist_experience")
    op.drop_table("analysis_results")
    op.drop_table("vacancies")
    op.drop_table("user_actions")
    op.drop_table("specialists")
    op.drop_table("users")
    op.drop_table("roles")
    op.drop_table("employment_types")
    # ### end Alembic commands ###
    op.execute("DELETE FROM roles WHERE name IN ('HR', 'ADMIN', 'USER')")
    op.execute("DELETE FROM employment_types WHERE name IN ('full-time', 'part-time')")
