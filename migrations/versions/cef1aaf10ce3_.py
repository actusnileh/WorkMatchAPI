"""empty message

Revision ID: cef1aaf10ce3
Revises: 98b82f490681
Create Date: 2025-03-24 20:40:59.270277

"""

from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "cef1aaf10ce3"
down_revision: Union[str, None] = "98b82f490681"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("analysis_results_vacancy_id_fkey", "analysis_results", type_="foreignkey")
    op.drop_constraint("analysis_results_specialist_id_fkey", "analysis_results", type_="foreignkey")
    op.create_foreign_key(None, "analysis_results", "specialists", ["specialist_id"], ["o_id"], ondelete="CASCADE")
    op.create_foreign_key(None, "analysis_results", "vacancies", ["vacancy_id"], ["o_id"], ondelete="CASCADE")
    op.drop_constraint("applications_specialist_uuid_fkey", "applications", type_="foreignkey")
    op.drop_constraint("applications_vacancy_uuid_fkey", "applications", type_="foreignkey")
    op.create_foreign_key(None, "applications", "specialists", ["specialist_uuid"], ["uuid"], ondelete="CASCADE")
    op.create_foreign_key(None, "applications", "vacancies", ["vacancy_uuid"], ["uuid"], ondelete="CASCADE")
    op.drop_constraint("specialist_experience_specialist_id_fkey", "specialist_experience", type_="foreignkey")
    op.create_foreign_key(None, "specialist_experience", "specialists", ["specialist_id"], ["o_id"], ondelete="CASCADE")
    op.drop_constraint("specialist_skills_specialist_id_fkey", "specialist_skills", type_="foreignkey")
    op.create_foreign_key(None, "specialist_skills", "specialists", ["specialist_id"], ["o_id"], ondelete="CASCADE")
    op.drop_constraint("specialists_employment_type_id_fkey", "specialists", type_="foreignkey")
    op.drop_constraint("specialists_created_by_fkey", "specialists", type_="foreignkey")
    op.create_foreign_key(None, "specialists", "users", ["created_by"], ["o_id"], ondelete="CASCADE")
    op.create_foreign_key(None, "specialists", "employment_types", ["employment_type_id"], ["o_id"], ondelete="CASCADE")
    op.drop_constraint("vacancies_employment_type_id_fkey", "vacancies", type_="foreignkey")
    op.create_foreign_key(None, "vacancies", "employment_types", ["employment_type_id"], ["o_id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "vacancies", type_="foreignkey")
    op.create_foreign_key(
        "vacancies_employment_type_id_fkey", "vacancies", "employment_types", ["employment_type_id"], ["o_id"]
    )
    op.drop_constraint(None, "specialists", type_="foreignkey")
    op.drop_constraint(None, "specialists", type_="foreignkey")
    op.create_foreign_key("specialists_created_by_fkey", "specialists", "users", ["created_by"], ["o_id"])
    op.create_foreign_key(
        "specialists_employment_type_id_fkey", "specialists", "employment_types", ["employment_type_id"], ["o_id"]
    )
    op.drop_constraint(None, "specialist_skills", type_="foreignkey")
    op.create_foreign_key(
        "specialist_skills_specialist_id_fkey", "specialist_skills", "specialists", ["specialist_id"], ["o_id"]
    )
    op.drop_constraint(None, "specialist_experience", type_="foreignkey")
    op.create_foreign_key(
        "specialist_experience_specialist_id_fkey", "specialist_experience", "specialists", ["specialist_id"], ["o_id"]
    )
    op.drop_constraint(None, "applications", type_="foreignkey")
    op.drop_constraint(None, "applications", type_="foreignkey")
    op.create_foreign_key("applications_vacancy_uuid_fkey", "applications", "vacancies", ["vacancy_uuid"], ["uuid"])
    op.create_foreign_key(
        "applications_specialist_uuid_fkey", "applications", "specialists", ["specialist_uuid"], ["uuid"]
    )
    op.drop_constraint(None, "analysis_results", type_="foreignkey")
    op.drop_constraint(None, "analysis_results", type_="foreignkey")
    op.create_foreign_key(
        "analysis_results_specialist_id_fkey", "analysis_results", "specialists", ["specialist_id"], ["o_id"]
    )
    op.create_foreign_key("analysis_results_vacancy_id_fkey", "analysis_results", "vacancies", ["vacancy_id"], ["o_id"])
    # ### end Alembic commands ###
