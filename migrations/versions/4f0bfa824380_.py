"""empty message

Revision ID: 4f0bfa824380
Revises: 823a9133d42a
Create Date: 2025-03-16 19:12:09.974321

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4f0bfa824380"
down_revision: Union[str, None] = "823a9133d42a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "application_statuses",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.Unicode(length=50), nullable=False),
        sa.PrimaryKeyConstraint("o_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "applications",
        sa.Column("o_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("specialist_id", sa.BigInteger(), nullable=False),
        sa.Column("vacancy_id", sa.BigInteger(), nullable=False),
        sa.Column("status_id", sa.BigInteger(), nullable=False),
        sa.Column("applied_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["specialist_id"],
            ["specialists.o_id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["application_statuses.o_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vacancy_id"],
            ["vacancies.o_id"],
        ),
        sa.PrimaryKeyConstraint("o_id"),
    )
    # ### end Alembic commands ###
    op.bulk_insert(
        sa.table(
            "application_statuses",
            sa.column("name", sa.String),
        ),
        [
            {"name": "отправлено"},
            {"name": "отклонено"},
            {"name": "принято"},
        ],
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("applications")
    op.drop_table("application_statuses")
    # ### end Alembic commands ###
    op.execute("DELETE FROM application_statuses WHERE name IN ('отправлено', 'отклонено', 'принято')")
